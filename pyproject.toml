[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Minimum requirements for the build system to execute.
#requires = ["setuptools>=61.0.0", "wheel"]
#build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
aprofs = ["*.json"] # Include all JSON files in the package.


[tool.setuptools]
#packages = [{ include = "aprofs", from="src"}] # Required for `setuptools.find_packages` to work.
packages = ["aprofs"]


#[tool.setuptools.dynamic]
#version = { file = "version.txt" }


[tool.poetry]
name = "aprofs"
version = "0.0.3"
description = "\"Package aprofs serves the purpose of streaming the feature selection using aproximate preditions\""
authors = ["Filipe Santos"]
license = "MIT"
readme = "README.md"
keywords = ["one", "two"]
classifiers = ["Programming Language :: Python :: 3"]
#package-mode = false

[tool.poetry.dependencies]
python = "^3.9"
pandas = "^2.2.1"
polars = "^0.20.18"
shap = "^0.45.0"
lightgbm = "^4.3.0"
scikit-learn = "^1.4.1.post1"
tqdm = "^4.66.2"
seaborn = "^0.13.2"
plotly = "^5.20.0"
nbformat = "^5.10.4"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-cov = "5.0.0"
twine = "^5.0.0"
build = "^1.2.1"
pre-commit = "^3.7.0"
mkdocs = "^1.5.3"
mkdocstrings = "^0.24.2"
mkdocstrings-python = "^1.9.2"
mkdocs-material = "^9.5.17"
Pygments = "^2.17.2"
mkdocs-jupyter = "^0.24.7"



[tool.pytest.ini_options]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]
pythonpath = "src"

[tool.black]
line-length = 119
exclude = "venv"

[tool.flake8]
docstring-convention = "all"
ignore = ["D107", "D212", "E501", "W503", "W605", "D203", "D100"]
exclude = ["venv","tests/*"]
max-line-length = 119

# radon
radon-max-cc = 10

[tool.isort]
profile = "black"
multi_line_output = "VERTICAL_HANGING_INDENT"
force_grid_wrap = 2
line_length = 119

[tool.pylint."messages control"]
disable = [
    "line-too-long",
    "trailing-whitespace",
    "missing-function-docstring",
    "consider-using-f-string",
    "import-error",
    "too-few-public-methods",
    "redefined-outer-name",
]

[tool.ruff]
# Enable flake8-bugbear (`B`) rules.
select = ["E", "F", "B", "ERA"]

# Never enforce `E501` (line length violations).
ignore = ["E501", "F401"]

# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]
line-length = 119

src = ["src"]

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]
"path/to/file.py" = ["E402"]
